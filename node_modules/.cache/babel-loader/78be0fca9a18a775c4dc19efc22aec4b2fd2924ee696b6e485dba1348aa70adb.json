{"ast":null,"code":"var _jsxFileName = \"/Users/sherwinallen/VsCode/HTML/Piano Palette/src/components/Piano.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Piano.css';\nimport { Key } from './Key.js';\nimport { NOTES, VALID_KEYS, KEY_TO_NOTE } from '../global/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Piano extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playNote = note => {\n      if (!_.isEmpty(note)) {\n        const noteAudio = new Audio(document.getElementById(note).src);\n        noteAudio.play();\n      }\n    };\n    this.handleKeyDown = event => {\n      if (event.repeat) {\n        return;\n      }\n      const key = event.key;\n      const updatedPressedKeys = [...this.state.pressedKeys];\n      if (!updatedPressedKeys.includes(key) && VALID_KEYS.includes(key)) {\n        updatedPressedKeys.push(key);\n      }\n      this.setState({\n        pressedKeys: updatedPressedKeys\n      });\n      this.playNote(KEY_TO_NOTE[key]);\n    };\n    this.handleKeyUp = event => {\n      const index = this.state.pressedKeys.indexOf(event.key);\n      if (index > -1) {\n        this.setState(state => ({\n          pressedKeys: state.pressedKeys.splice(index, 1)\n        }));\n      }\n    };\n    this.componentDidMount = () => {\n      window.addEventListener('keydown', this.handleKeyDown);\n      window.addEventListener('keyup', this.handleKeyUp);\n    };\n    this.getnotes = async () => {\n      const response = await fetch('http://localhost:8080', {\n        method: 'GET'\n      });\n      const notes = await response.json();\n      console.long(notes);\n    };\n    this.state = {\n      pressedKeys: []\n    };\n  }\n  render() {\n    const keys = _.map(NOTES, (note, index) => {\n      return /*#__PURE__*/_jsxDEV(Key, {\n        note: note,\n        pressedKeys: this.state.pressedKeys\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    });\n    const audioFiles = _.map(NOTES, (note, index) => {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: note,\n        src: `../../notes/${note}.mp3`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    });\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8080/');\n        const data = await response.json();\n\n        // Process and display the data\n        data.forEach(document => {\n          document.notes.forEach(note => {\n            console.log(note); // Display each element separately (you can modify this part as needed)\n          });\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"over\",\n        children: \"Try playing the song!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piano-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piano\",\n          children: keys\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: audioFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"over\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"HomeButton\",\n            children: \"Back to Home Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Piano;","map":{"version":3,"names":["_","React","Link","Key","NOTES","VALID_KEYS","KEY_TO_NOTE","jsxDEV","_jsxDEV","Piano","Component","constructor","props","playNote","note","isEmpty","noteAudio","Audio","document","getElementById","src","play","handleKeyDown","event","repeat","key","updatedPressedKeys","state","pressedKeys","includes","push","setState","handleKeyUp","index","indexOf","splice","componentDidMount","window","addEventListener","getnotes","response","fetch","method","notes","json","console","long","render","keys","map","fileName","_jsxFileName","lineNumber","columnNumber","audioFiles","id","fetchData","data","forEach","log","error","children","className","to"],"sources":["/Users/sherwinallen/VsCode/HTML/Piano Palette/src/components/Piano.js"],"sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Piano.css';\r\nimport { Key } from './Key.js'\r\nimport {\r\n  NOTES,\r\n  VALID_KEYS,\r\n  KEY_TO_NOTE,\r\n} from '../global/constants';\r\n\r\nclass Piano extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pressedKeys: [],\r\n    };\r\n  }\r\n\r\n  playNote = (note) => {\r\n    if (!_.isEmpty(note)) {\r\n      const noteAudio = new Audio(document.getElementById(note).src);\r\n      noteAudio.play();\r\n    }\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.repeat) {\r\n      return;\r\n    }\r\n    const key = event.key;\r\n    const updatedPressedKeys = [...this.state.pressedKeys];\r\n    if (!updatedPressedKeys.includes(key) && VALID_KEYS.includes(key)) {\r\n      updatedPressedKeys.push(key);\r\n    }\r\n    this.setState({\r\n      pressedKeys: updatedPressedKeys,\r\n    });\r\n    this.playNote(KEY_TO_NOTE[key]);\r\n  }\r\n\r\n  handleKeyUp = (event) => {\r\n    const index = this.state.pressedKeys.indexOf(event.key);\r\n    if (index > -1) {\r\n      this.setState(state => ({\r\n        pressedKeys: state.pressedKeys.splice(index, 1)\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    window.addEventListener('keyup', this.handleKeyUp);\r\n  }\r\n\r\n  getnotes = async () =>\r\n  {\r\n    const response = await fetch('http://localhost:8080',\r\n    {\r\n      method: 'GET'\r\n    })\r\n    const notes = await response.json()\r\n    console.long(notes)\r\n  }\r\n\r\n  render() {\r\n    const keys = _.map(NOTES, (note, index) => {\r\n      return (\r\n        <Key\r\n          key={index}\r\n          note={note}\r\n          pressedKeys={this.state.pressedKeys}\r\n        />\r\n      );\r\n    });\r\n\r\n    const audioFiles = _.map(NOTES, (note, index) => {\r\n      return (\r\n        <audio\r\n          id={note}\r\n          key={index}\r\n          src={`../../notes/${note}.mp3`}\r\n        />\r\n      );\r\n    });\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/');\r\n        const data = await response.json();\r\n    \r\n        // Process and display the data\r\n        data.forEach((document) => {\r\n          document.notes.forEach((note) => {\r\n            console.log(note); // Display each element separately (you can modify this part as needed)\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <h2 className = \"over\">Try playing the song!!</h2>\r\n        <div className = \"piano-container\">\r\n          <div className=\"piano\">\r\n            {keys}\r\n          </div>\r\n          <div>\r\n            {audioFiles}\r\n          </div>\r\n        </div>\r\n        <div className = \"over\">\r\n        <Link to = \"/\">\r\n          <button className = \"HomeButton\">Back to Home Page</button>\r\n        </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Piano;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}