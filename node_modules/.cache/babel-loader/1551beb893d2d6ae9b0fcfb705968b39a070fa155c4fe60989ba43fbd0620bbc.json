{"ast":null,"code":"\n// import _ from 'lodash';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useParams } from 'react-router-dom';\n// import './Piano.css';\n// import { Key } from './Key.js'\n// import {\n//   NOTES,\n//   VALID_KEYS,\n//   KEY_TO_NOTE,\n// } from '../global/constants';\n\n// class Piano extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       pressedKeys: [],\n//     };\n//   }\n\n//   playNote = (note) => {\n//     if (!_.isEmpty(note)) {\n//       const noteAudio = new Audio(document.getElementById(note).src);\n//       noteAudio.play();\n//     }\n//   }\n\n//   handleKeyDown = (event) => {\n//     if (event.repeat) {\n//       return;\n//     }\n//     const key = event.key;\n//     const updatedPressedKeys = [...this.state.pressedKeys];\n//     if (!updatedPressedKeys.includes(key) && VALID_KEYS.includes(key)) {\n//       updatedPressedKeys.push(key);\n//     }\n//     this.setState({\n//       pressedKeys: updatedPressedKeys,\n//     });\n//     this.playNote(KEY_TO_NOTE[key]);\n//   }\n\n//   handleKeyUp = (event) => {\n//     const index = this.state.pressedKeys.indexOf(event.key);\n//     if (index > -1) {\n//       this.setState(state => ({\n//         pressedKeys: state.pressedKeys.splice(index, 1)\n//       }));\n//     }\n//   }\n\n//   componentDidMount = () => {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//     window.addEventListener('keyup', this.handleKeyUp);\n//   }\n\n//   getnotes = async () =>\n//   {\n//     const response = await fetch('http://localhost:8080',\n//     {\n//       method: 'GET'\n//     })\n//     const notes = await response.json()\n//     console.long(notes)\n//   }\n\n//   render() {\n//     const keys = _.map(NOTES, (note, index) => {\n//       return (\n//         <Key\n//           key={index}\n//           note={note}\n//           pressedKeys={this.state.pressedKeys}\n//         />\n//       );\n//     });\n\n//     const audioFiles = _.map(NOTES, (note, index) => {\n//       return (\n//         <audio\n//           id={note}\n//           key={index}\n//           src={`../../notes/${note}.mp3`}\n//         />\n//       );\n//     });\n\n//     async function fetchData() {\n//       try {\n//         const response = await fetch('http://localhost:8080/');\n//         const data = await response.json();\n\n//         // Process and display the data\n//         data.forEach((document) => {\n//           document.notes.forEach((note) => {\n//             console.log(note); // Display each element separately (you can modify this part as needed)\n//           });\n//         });\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n\n//     fetchData();\n\n//     return (\n//       <div>\n//         <h2 className = \"over\">Try playing the song!!</h2>\n//         <div className = \"piano-container\">\n//           <div className=\"piano\">\n//             {keys}\n//           </div>\n//           <div>\n//             {audioFiles}\n//           </div>\n//         </div>\n//         <div className = \"over\">\n//         <Link to = \"/\">\n//           <button className = \"HomeButton\">Back to Home Page</button>\n//         </Link>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Piano;","map":{"version":3,"names":[],"sources":["/Users/sherwinallen/VsCode/HTML/Piano Palette/src/components/Piano.js"],"sourcesContent":["\r\n// import _ from 'lodash';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import './Piano.css';\r\n// import { Key } from './Key.js'\r\n// import {\r\n//   NOTES,\r\n//   VALID_KEYS,\r\n//   KEY_TO_NOTE,\r\n// } from '../global/constants';\r\n\r\n// class Piano extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       pressedKeys: [],\r\n//     };\r\n//   }\r\n\r\n//   playNote = (note) => {\r\n//     if (!_.isEmpty(note)) {\r\n//       const noteAudio = new Audio(document.getElementById(note).src);\r\n//       noteAudio.play();\r\n//     }\r\n//   }\r\n\r\n//   handleKeyDown = (event) => {\r\n//     if (event.repeat) {\r\n//       return;\r\n//     }\r\n//     const key = event.key;\r\n//     const updatedPressedKeys = [...this.state.pressedKeys];\r\n//     if (!updatedPressedKeys.includes(key) && VALID_KEYS.includes(key)) {\r\n//       updatedPressedKeys.push(key);\r\n//     }\r\n//     this.setState({\r\n//       pressedKeys: updatedPressedKeys,\r\n//     });\r\n//     this.playNote(KEY_TO_NOTE[key]);\r\n//   }\r\n\r\n//   handleKeyUp = (event) => {\r\n//     const index = this.state.pressedKeys.indexOf(event.key);\r\n//     if (index > -1) {\r\n//       this.setState(state => ({\r\n//         pressedKeys: state.pressedKeys.splice(index, 1)\r\n//       }));\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount = () => {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//     window.addEventListener('keyup', this.handleKeyUp);\r\n//   }\r\n\r\n//   getnotes = async () =>\r\n//   {\r\n//     const response = await fetch('http://localhost:8080',\r\n//     {\r\n//       method: 'GET'\r\n//     })\r\n//     const notes = await response.json()\r\n//     console.long(notes)\r\n//   }\r\n\r\n//   render() {\r\n//     const keys = _.map(NOTES, (note, index) => {\r\n//       return (\r\n//         <Key\r\n//           key={index}\r\n//           note={note}\r\n//           pressedKeys={this.state.pressedKeys}\r\n//         />\r\n//       );\r\n//     });\r\n\r\n//     const audioFiles = _.map(NOTES, (note, index) => {\r\n//       return (\r\n//         <audio\r\n//           id={note}\r\n//           key={index}\r\n//           src={`../../notes/${note}.mp3`}\r\n//         />\r\n//       );\r\n//     });\r\n\r\n//     async function fetchData() {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8080/');\r\n//         const data = await response.json();\r\n    \r\n//         // Process and display the data\r\n//         data.forEach((document) => {\r\n//           document.notes.forEach((note) => {\r\n//             console.log(note); // Display each element separately (you can modify this part as needed)\r\n//           });\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n\r\n//     return (\r\n//       <div>\r\n//         <h2 className = \"over\">Try playing the song!!</h2>\r\n//         <div className = \"piano-container\">\r\n//           <div className=\"piano\">\r\n//             {keys}\r\n//           </div>\r\n//           <div>\r\n//             {audioFiles}\r\n//           </div>\r\n//         </div>\r\n//         <div className = \"over\">\r\n//         <Link to = \"/\">\r\n//           <button className = \"HomeButton\">Back to Home Page</button>\r\n//         </Link>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Piano;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}